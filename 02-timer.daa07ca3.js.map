{"mappings":"YAOA,MAAMA,EAAUC,SAASC,cAAc,oBACjCC,EAAYF,SAASG,iBAAiB,UACtCC,EAAWJ,SAASC,cAAc,sBAGxC,SAASI,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,IACnC,CAJAJ,EAASK,UAAW,EAiCpB,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACNb,EAASK,UAAW,EACpBL,EAASc,MAAMC,WAAa,UAC5BC,aAAeH,EAAc,GAETP,EAAQG,YAEVO,cAChBhB,EAASK,UAAW,EACpBL,EAASc,MAAMC,WAAa,OAE5BE,OAAOC,QAAQ,uCAEfC,OAAOC,QAAQ,kBAEnB,GAIF,SAASC,IACP1B,EAAQU,UAAW,EACnBL,EAASK,UAAW,EACpBL,EAASc,MAAMC,WAAa,OAC5BpB,EAAQmB,MAAMC,WAAa,OAE3B,IAAIO,EAAa,KACjBA,EAAaC,aAAY,KACvB,MAAMC,EAAc,IAAId,KAClBe,EAAYT,aAAeQ,EAE7BC,EAAY,MACdC,cAAcJ,GACdL,OAAOG,QAAQ,iBACfzB,EAAQU,UAAW,EACnBV,EAAQmB,MAAMC,WAAa,WA9CjC,UAAoBY,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC1ChC,EAAU,GAAGiC,YAAc,GAAGJ,IAC9B7B,EAAU,GAAGiC,YAAc,GAAGH,IAC9B9B,EAAU,GAAGiC,YAAc,GAAGF,IAC9B/B,EAAU,GAAGiC,YAAc,GAAGD,GAChC,CA4CIE,CArEJ,SAAmBC,GAEjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAYZ,MAAO,C,KATMnC,EAAeqC,KAAKC,MAAMN,EAAKI,I,MAE9BpC,EAAeqC,KAAKC,MAAMN,EAAMI,EAAOD,I,QAErCnC,EAAeqC,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,I,QAEhDjC,EACdqC,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EAbrB,MAgBjB,CAkDeM,CAAUf,GACV,GACV,IACL,CAtBAgB,UAAU9C,EAASW,GAwBnBN,EAAS0C,iBAAiB,SAAS,KACjCrB,GAAA,G","sources":["src/js/02-timer.js"],"sourcesContent":["// import flatpickr from 'flatpickr';\n// import 'flatpickr/dist/flatpickr.min.css';\n// import { Report } from 'notiflix/build/notiflix-report-aio';\n// import { Notify } from 'notiflix/build/notiflix-Notify-aio';\n\n// require('flatpickr/dist/themes/material_blue.css');\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst spanValue = document.querySelectorAll('.value');\nconst startBtn = document.querySelector('button[data-start]');\nstartBtn.disabled = true;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTime({ days, hours, minutes, seconds }) {\n  spanValue[0].textContent = `${days}`;\n  spanValue[1].textContent = `${hours}`;\n  spanValue[2].textContent = `${minutes}`;\n  spanValue[3].textContent = `${seconds}`;\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    startBtn.disabled = false;\n    startBtn.style.background = '#5eacff';\n    selectedDate = selectedDates[0];\n\n    const defaultDate = options.defaultDate;\n\n    if (defaultDate > selectedDate) {\n      startBtn.disabled = true;\n      startBtn.style.background = 'grey';\n\n      Report.failure('Please choose a date in the future');\n    } else {\n      Notify.success('date is correct');\n    }\n  },\n};\nflatpickr(inputEl, options);\n\nfunction startCountdown() {\n  inputEl.disabled = true;\n  startBtn.disabled = true;\n  startBtn.style.background = 'grey';\n  inputEl.style.background = 'grey';\n\n  let intervalId = null;\n  intervalId = setInterval(() => {\n    const currentDate = new Date();\n    const deltaDate = selectedDate - currentDate;\n\n    if (deltaDate < 1000) {\n      clearInterval(intervalId);\n      Report.success('Sales startðŸš€');\n      inputEl.disabled = false;\n      inputEl.style.background = '#5eacff';\n    }\n    let time = convertMs(deltaDate);\n    updateTime(time);\n  }, 1000);\n}\n\nstartBtn.addEventListener('click', () => {\n  startCountdown();\n});\n"],"names":["$84b9dae4df53835d$var$inputEl","document","querySelector","$84b9dae4df53835d$var$spanValue","querySelectorAll","$84b9dae4df53835d$var$startBtn","$84b9dae4df53835d$var$addLeadingZero","value","String","padStart","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","style","background","selectedDate","Report","failure","Notify","success","$84b9dae4df53835d$var$startCountdown","intervalId","setInterval","currentDate","deltaDate","clearInterval","days","hours","minutes","seconds","textContent","$84b9dae4df53835d$var$updateTime","ms","minute","second","hour","day","Math","floor","$84b9dae4df53835d$var$convertMs","flatpickr","addEventListener"],"version":3,"file":"02-timer.daa07ca3.js.map"}